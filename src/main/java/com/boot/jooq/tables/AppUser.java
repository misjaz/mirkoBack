/*
 * This file is generated by jOOQ.
*/
package com.boot.jooq.tables;


import com.boot.jooq.Keys;
import com.boot.jooq.Wiza;
import com.boot.jooq.tables.records.AppUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUser extends TableImpl<AppUserRecord> {

    private static final long serialVersionUID = -1416872625;

    /**
     * The reference instance of <code>wiza.app_user</code>
     */
    public static final AppUser APP_USER = new AppUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AppUserRecord> getRecordType() {
        return AppUserRecord.class;
    }

    /**
     * The column <code>wiza.app_user.id</code>.
     */
    public final TableField<AppUserRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>wiza.app_user.username</code>.
     */
    public final TableField<AppUserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>wiza.app_user.password</code>.
     */
    public final TableField<AppUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>wiza.app_user.active</code>.
     */
    public final TableField<AppUserRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>wiza.app_user.email</code>.
     */
    public final TableField<AppUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>wiza.app_user.first_name</code>.
     */
    public final TableField<AppUserRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>wiza.app_user.last_name</code>.
     */
    public final TableField<AppUserRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>wiza.app_user.phone</code>.
     */
    public final TableField<AppUserRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>wiza.app_user.company_id</code>.
     */
    public final TableField<AppUserRecord, UInteger> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * Create a <code>wiza.app_user</code> table reference
     */
    public AppUser() {
        this("app_user", null);
    }

    /**
     * Create an aliased <code>wiza.app_user</code> table reference
     */
    public AppUser(String alias) {
        this(alias, APP_USER);
    }

    private AppUser(String alias, Table<AppUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private AppUser(String alias, Table<AppUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wiza.WIZA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AppUserRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_APP_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AppUserRecord> getPrimaryKey() {
        return Keys.KEY_APP_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AppUserRecord>> getKeys() {
        return Arrays.<UniqueKey<AppUserRecord>>asList(Keys.KEY_APP_USER_PRIMARY, Keys.KEY_APP_USER_USERNAME, Keys.KEY_APP_USER_EMAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AppUserRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AppUserRecord, ?>>asList(Keys.APP_USER_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUser as(String alias) {
        return new AppUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AppUser rename(String name) {
        return new AppUser(name, null);
    }
}
